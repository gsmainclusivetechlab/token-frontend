{"remainingRequest":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/src/views/Orange.vue?vue&type=template&id=47551c30&","dependencies":[{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/src/views/Orange.vue","mtime":1638291805589},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImhvbWUiPgogIDxBcHBIZWFkZXIgdi1iaW5kPSJwcm9wcyIgLz4KCiAgPGRpdiBjbGFzcz0ibG9naW4tZm9ybS1mcmFtZSI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbGctNiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250ZW50LWxvZ2luIj4KICAgICAgICAgICAgPGgyPgogICAgICAgICAgICAgIFVzZXIgQ2FzZXMgVGVzdGluZyBHdWlkZSA8YnIgLz4KICAgICAgICAgICAgPC9oMj4KICAgICAgICAgICAgPHA+VGhpcyBwcm9qZWN0IGFpbXMgdG8gYWRkcmVzcyB0aGUgdXNlIG9mIHZvaWNlIHJlY29nbml0aW9uIHRvIGFjY2VzcyBtb2JpbGUgbW9uZXkgc2VydmljZXMgdGhyb3VnaCBhIHNob3djYXNlIGNyZWF0ZWQgYnkgdGhlIEluY2x1c2l2ZSBUZWNoIExhYiAtIEdTTUEgYW5kIE9yYW5nZS4KICAgICAgICAgICAgICAgVGhlIGluIGRpZmZlcmVudCB1c2UgY2FzZXMgYXBwcm9hY2hlZCBpbiB0aGUgc2hvdyBjYXNlIGFyZTogUmVzZXQgUElOLCBNZXJjaGFudCBQYXltZW50cywgQ2FzaC1JTiwgQ2FzaC1PdXQgYW5kIENhc2gtdG8tQ2FzaC4KICAgICAgICAgICAgICAgVGhpcyBwYWdlIHdhcyBjcmVhdGVkIHRvIGJlIHVzZWQgYW5kIGEgZ3VpZGUgdG8gdGhvc2Ugd2hvIGFyZSB0ZXN0aW5nIHRoZSBzaG93IGNhc2UuIFRoZSBpbmZvcm1hdGlvbiBzaGFyZWQgaGVyZSBicmluZ3MgdGhlIGRpZmZlcmVudCBwb3NzaWJpbGl0aWVzIHRvIHRlc3QgaW5jbHVkaW5nOiBkaWZmZXJlbnQgdXNlciBjYXNlIGZsb3dzLCBkaWZmZXJlbnQgY29tbXVuaWNhdGlvbiBjaGFubmVscyAoZS5nLiBTTVMsIFVTU0QsIFFSQ29kZSwgYW5kIElWUiBDYWxsIGNlbnRyZSksIGFuZCBzcGVjaWZpYyBpbmZvcm1hdGlvbiBuZWNlc3NhcnkgdG8gcHJvY2VlZCB3aXRoIHRoZSB0ZXN0cy4gPC9wPgogICAgICAgICAgICA8aDQ+CiAgICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGhvbmUtY2FsbC1mcmFtZSBtci0xMCIKICAgICAgICAgICAgICAgICAgPjxpbWcKICAgICAgICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWFnZXMvcGhvbmUtY2FsbC1ibHVlLnBuZyIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW1nLWZsdWlkIgogICAgICAgICAgICAgICAgICAgIGFsdD0icGhvbmUtY2FsbC1ibHVlIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPGI+RW5nbGlzaCAoVUspOiA8L2I+PGEgaHJlZj0idGVsOis0NDE5MDQ4MDMzNzgiPis0NCAxOTA0IDgwMzM3ODwvYT4gLyA8YSBocmVmPSJ0ZWw6KzE3MzcyNDUwMjAwIj4rMSA3MzcgMjQ1IDAyMDA8L2E+CiAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InBob25lLWNhbGwtZnJhbWUgbXItMTAiCiAgICAgICAgICAgICAgICAgID48aW1nCiAgICAgICAgICAgICAgICAgICAgc3JjPSIuLi9hc3NldHMvaW1hZ2VzL3Bob25lLWNhbGwtYmx1ZS5wbmciCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImltZy1mbHVpZCIKICAgICAgICAgICAgICAgICAgICBhbHQ9InBob25lLWNhbGwtYmx1ZSIKICAgICAgICAgICAgICAgICAgLz4gPC9zcGFuCiAgICAgICAgICAgICAgICA+PGI+RnJlbmNoIChGUik6IDwvYj4gPGEgaHJlZj0idGVsOis0NDc3MjM0MzI1NDMiPis0NCA3NzIzIDQzMjU0MzwvYT4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgIElmIHlvdSBoYXZlIGRvdWJ0cyBvciB5b3UgaGF2ZSBhbnkgc3VnZ2VzdGlvbiwgcGxlYXNlIGNvbnRhY3QgdGhlCiAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgIGhyZWY9Imh0dHBzOi8vd3d3LmdzbWEuY29tL21vYmlsZWZvcmRldmVsb3BtZW50L21vYmlsZS1tb25leS9nc21hLWluY2x1c2l2ZS10ZWNoLWxhYi8iCiAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBJbmNsdXNpdmUgVGVjaCBMYWI8L2EKICAgICAgICAgICAgICA+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbGctNiI+CiAgICAgICAgICBTaWduIHVwIG9uIHRoZSByaWdodCBzaWRlIGFuZCBmb2xsb3cgdGhlIGluc3RydWN0aW9ucyBvbiB0aGUgY2FsbCBjZW50cmUgdG8gZW5yb2wgdXNpbmcgeW91ciB2b2ljZSBwcmludCwgZW5hYmxpbmcgeW91IHRvIG5hdmlnYXRlIHRocm91Z2ggdGhlIHVzZSBjYXNlcyBhbmQgdGVzdCBhbGwgdGhlIGRpZmZlcmVudCBmbG93cyBvZiB0aGlzIGd1aWRlLgogICAgICAgICAgPC9icj4KICAgICAgICAgIDwvYnI+CiAgICAgICAgICBUaGUgaW51dCBmb3JtIGdvZXMgaGVyZS4uLgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPC9icj4gPGk+IElmIHlvdSB3YW50IHRvIHJlYWQgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgVXNlIENhc2UgZmxvd3MgcGxlYXNlIHZpc2l0IG91ciAKICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iaHR0cHM6Ly9kb2NzLmJpb21ldHJpY3MuZ3NtYWluY2x1c2l2ZXRlY2hsYWIuaW8vIiB0YXJnZXQ9Il9ibGFuayI+CiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnRhdGlvbiBwYWdlLjwvYT4gPC9pPgogICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgogIDxzZWN0aW9uIGNsYXNzPSJ0d28tY29sLWJpb21ldHJpYy13cmFwIHRleHQtd2hpdGUiPgogICAgPGItY29udGFpbmVyPgogICAgICA8Yi1yb3cgY2xhc3M9Imp1c3RpZnktY29udGVudC1zdGFydCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgIDxiLWNvbCBjb2xzPSIxMiIgeGw9IjYiPgogICAgICAgICAgPGRpdiBjbGFzcz0iYmlvbWV0cmljLWNvbnRlbnQiPgogICAgICAgICAgICA8aDI+CiAgICAgICAgICAgICAgVXNlIENhc2UgMDEgPGJyIC8+CiAgICAgICAgICAgICAgUmVzZXQgUElOIE51bWJlcgogICAgICAgICAgICA8L2gyPgogICAgICAgICAgICA8cD4KICAgICAgICAgICAgICBUaGlzIHVzZSBjYXNlIGFwcHJvYWNoZXMgdGhlIG5lZWQgb2YgdGhlIHVzZXIgdG8gY2hhbmdlIHRoZWlyIFBJTiBudW1iZXIuIAogICAgICAgICAgICAgIFRoZXJlIGFyZSB0d28gcG9zc2liaWxpdGllcyB3aGVyZSBpdCBjb3VsZCBvY2N1cjoKICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8cD4gPGI+IDEuIFRoZSB1c2VyIGxvc3QgdGhlIFBJTiBudW1iZXIgYW5kIHdhbnQgdG8gcmVzZXQgaXQ6IDwvYj4KICAgICAgICAgICAgICA8L2JyPiA8aT4gQ2FsbGluZyB0aGUgSVZSIENhbGwgQ2VudHJlIGFuZCBzZWxlY3RpbmcgdGhlIG9wdGlvbiByZXNldCBQSU4uIFRoZSBzeXN0ZW0gd2lsbCB2YWxpZGF0ZSB0aGUgdXNlciB0aHJvdWdoIHZvaWNlIHZlcmlmaWNhdGlvbiBhbmQgYWxsb3dzIHRoZSB1c2VyIHRvIGNoYW5nZSB0aGUgUElOIG51bWJlciBpbnRyb2R1Y2luZyB0aGUgbmV3IDQgZGlnaXRzIFBJTi4gPC9pPgogICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxwPiA8Yj4gMi4gVGhlIHVzZXIga25vd3MgdGhlIHBpbiBudW1iZXIgYW5kIHdhbnQgdG8gY2hhbmdlOiA8L2I+IAogICAgICAgICAgICAgIDwvYnI+IDxpPiBDYWxsaW5nIHRoZSBJVlIgQ2FsbCBDZW50cmUgYW5kIHNlbGVjdGluZyB0aGUgb3B0aW9uIGNoYW5nZSBQSU4uIFRoZSBzeXN0ZW0gd2lsbCB2YWxpZGF0ZSB0aGUgdXNlciB1c2luZyB0aGUgcHJldmlvdXMgUElOIGFuZCBhbGxvd3MgdGhlIHVzZXIgdG8gY2hhbmdlIHRoZSBQSU4gbnVtYmVyIGludHJvZHVjaW5nIHRoZSBuZXcgNCBkaWdpdHMgUElOLiA8L2k+CiAgICAgICAgICAgICAgPC9wPiAKICAgICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItY29sPgogICAgICAgIDxiLWNvbCBjb2xzPSIxMiIgeGw9IjYiPgogICAgICAgICAgPGRpdiBjbGFzcz0iYmlvbWV0cmljLWltZy1ibG9jayI+CiAgICAgICAgICAgIDxiLXJvdyBjbGFzcz0ianVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIgZ3V0dGVyLTIwIGZsZXgtbWQtY29sdW1uIj4KICAgICAgICAgICAgICA8Yi1jb2wgY29scz0iMTIiIG1kPSIxMCI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8dT48Yj5Vc2luZyBTTVMvVVNTRDwvYj48L3U+CiAgICAgICAgICAgICAgICAgIDwvYnI+MS4gU2VuZCBhbiBTTVMgbWVzc2FnZSB0byB0aGUgY2FsbCBjZW50cmUgbnVtYmVyIHVzaW5nIG9uZSBvZiB0aGUgdHdvIG9wdGlvbnM6IAogICAgICAgICAgICAgICAgICAgIDwvYnI+PGg2PiZuYnNwOzxiPlJFU0VUUElOPC9iPiAoU01TIG1lc3NhZ2Ugc3R5bGUpPC9oNj4gCiAgICAgICAgICAgICAgICAgICAgPC9icj48Yj4qKjQyKjAzMzwvYj4gKFVTU0QgY29kZSBzdHlsZSkKICAgICAgICAgICAgICAgICAgPC9icj4yLiBSZWNlaXZlIGFuIGluYm91bmQgY2FsbCAgICAKICAgICAgICAgICAgICAgICAgPC9icj4zLiBBdXRoZW50aWNhdGUgd2l0aCB2b2ljZSBhbmQgcmVzZXQgeW91ciBQSU4gCiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvYnI+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICA8dT48Yj5DYWxsaW5nIHRoZSBDYWxsIENlbnRyZTwvYj48L3U+CiAgICAgICAgICAgICAgICAgIDwvYnI+MS4gVXNlIG9uZSBvZiB0aGUgY2FsbCBjZW50cmUgbnVtYmVycyBhdmFpbGFibGUgZm9yIHRoaXMgcHJvamVjdC4KICAgICAgICAgICAgICAgICAgPC9icj4yLiBTZWxlY3QgdGhlIG9wdGlvbiA0IGluIHRoZSBtYWluIG1lbnUKICAgICAgICAgICAgICAgICAgPC9icj4zLiBJbnNlcnQgeW91ciBwcmV2aW91cyBQSU4gKDEyMzQgZm9yIGRlbW8gcHVycG9zZXMpCiAgICAgICAgICAgICAgICAgIDwvYnI+NC4gSW5zZXJ0IHlvdXIgbmV3IFBJTiBOdW1iZXIKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9hPiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgIDwvYi1yb3c+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItY29sPgogICAgICA8L2Itcm93PgogICAgPC9iLWNvbnRhaW5lcj4KICA8L3NlY3Rpb24+CiAgPGRpdiBjbGFzcz0iYWJvdXQtY29udGVudC13cmFwcGVyIHRyeS1mcmFtZSI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbWQtNiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWctYWJvdXQtY29udGVudCI+CiAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWFnZXMvR3VpZGUucG5nIgogICAgICAgICAgICAgIGNsYXNzPSJpbWctZmx1aWQiCiAgICAgICAgICAgICAgYWx0PSJHdWlkZSIKICAgICAgICAgICAgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbWQtNiI+CiAgICAgICAgICA8aDI+CiAgICAgICAgICAgICAgVXNlIENhc2UgMDIgPGJyIC8+CiAgICAgICAgICAgICAgTWVyY2hhbnQgUGF5bWVudHMKICAgICAgICAgIDwvaDI+CiAgICAgICAgICA8aT4oVXNlIENhc2UgdW5kZXIgZGV2ZWxvcG1lbnQpPC9pPgogICAgICAgICAgPHA+CiAgICAgICAgICAgIDwvYnI+ICBUaGlzIHVzZSBjYXNlIGFwcHJvYWNoZXMgdGhlIG1lcmNoYW50IHBheW1lbnQgaW4gZGlmZmVyZW50IHNjZW5hcmlvczoKICAgICAgICAgICAgPC9icj4gIDEuIFRoZSB1c2VyIG1ha2VzIHRoZSBwYXltZW50IGNhbGxpbmcgdGhlIGNhbGwgY2VudHJlLCB0eXBpbmcgdGhlIG1lcmNoYW50IG51bWJlciwgYW1vdW50IGFuZCBwcm9jZWVkaW5nIHdpdGggdGhlIHBheW1lbnQgd2l0aCB2b2ljZSB2ZXJpZmljYXRpb24uIAogICAgICAgICAgICA8L2JyPiAgMi4gVGhlIHVzZXIgZ2VuZXJhdGVzIGEgUVJDb2RlIGJlbG93LCByZWFkcyB3aXRoIHRoZSBtb2JpbGUgY2FtZXJhIGFuZCByZWNlaXZlcyBhIGNhbGwgdG8gdmVyaWZ5IHRoZSB1c2VyIHVzaW5nIHZvaWNlLgogICAgICAgICAgICA8L2JyPiAgMy4gVGhlIFVzZXIgc2VuZHMgYW4gU01TL1VTU0QgbWVzc2FnZSBjb250YWluaW5nIHRoZSBtZXJjaGFudCBudW1iZXIgYW5kIHRoZSBwYXltZW50IGFtb3VudCwgYW5kIHJlcXVlc3RzIHRvIHByb2NlZWQgd2l0aCB0aGUgcGF5bWVudC4gVGhlIHVzZXIgcmVjZWl2ZXMgYSBjYWxsIHRvIHZlcmlmeSB0aGUgdXNlciB1c2luZyB2b2ljZS4KICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8c2VjdGlvbiBjbGFzcz0idHdvLWNvbC1iaW9tZXRyaWMtd3JhcCB0ZXh0LXdoaXRlIj4KICAgIDxiLWNvbnRhaW5lcj4KICAgICAgPGItcm93IGNsYXNzPSJqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyIj4KICAgICAgICA8Yi1jb2wgY29scz0iMTIiIHhsPSI2Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9ImJpb21ldHJpYy1jb250ZW50Ij4KICAgICAgICAgICAgPGgyPgogICAgICAgICAgICAgIFFSIENvZGUgPGJyIC8+CiAgICAgICAgICAgICAgR2VuZXJhdGluZyBNZXJjaGFudCBDb2RlCiAgICAgICAgICAgIDwvaDI+CiAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgIFRoZSBhbGdvcml0aG0gdG8gZ2VuZXJhdGUgUVIgQ29kZSBhdXRvbWF0aWNhbGx5IGluIHVuZGVyIGRldmVsb3BtZW50LiBJdCB3aWxsIGJlIGFkZGVkIHRvIHRoZSBwcm9qZWN0IHNvb24uCiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvYi1jb2w+CiAgICAgICAgPGItY29sIGNvbHM9IjEyIiB4bD0iNiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJiaW9tZXRyaWMtaW1nLWJsb2NrIj4KICAgICAgICAgICAgPGItcm93IGNsYXNzPSJqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIGFsaWduLWl0ZW1zLWNlbnRlciBndXR0ZXItMjAgZmxleC1tZC1jb2x1bW4iPgogICAgICAgICAgICAgIDxiLWNvbCBjb2xzPSIxMiIgbWQ9IjEyIj4KICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgIFFSIENvZGUgd2lsbCBiZSBnZW5lcmF0ZWQgaGVyZQogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICBJbmZvIGFib3V0IHRoZSBRUiBDb2RlIFdpbGwgYmUgZ2VuZXJhdGVkIGhlcmUKICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9hPiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvYi1jb2w+CiAgICAgICAgICAgIDwvYi1yb3c+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2ItY29sPgogICAgICA8L2Itcm93PgogICAgPC9iLWNvbnRhaW5lcj4KICA8L3NlY3Rpb24+CiAgPGRpdiBjbGFzcz0iYWJvdXQtY29udGVudC13cmFwcGVyIHRyeS1mcmFtZSI+CiAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbWQtNiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWctYWJvdXQtY29udGVudCI+CiAgICAgICAgICAgIDxpbWcKICAgICAgICAgICAgICBzcmM9Ii4uL2Fzc2V0cy9pbWFnZXMvVGVjaC1sYWIucG5nIgogICAgICAgICAgICAgIGNsYXNzPSJpbWctZmx1aWQiCiAgICAgICAgICAgICAgYWx0PSJUZWNoLWxhYiIKICAgICAgICAgICAgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC0xMiBjb2wtbWQtNiI+CiAgICAgICAgICA8aDI+CiAgICAgICAgICAgICAgVXNlIENhc2UgMDMgPGJyIC8+CiAgICAgICAgICAgICAgQ2FzaCBJbiwgQ2FzaCBPdXQsIENhc2gtdG8tQ2FzaAogICAgICAgICAgICA8L2gyPgogICAgICAgICAgPGg2PgogICAgICAgICAgICBUaGlzIHVzZSBjYXNlIGlzIHN0aWwgdW5kZXIgZGV2ZWxvcG1lbnQgYnkgdGhlIEluY2x1c2l2ZSBUZWNoIExhYiB0ZWFtLgogICAgICAgICAgPC9oNj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8Rm9vdGVyIC8+CjwvZGl2Pgo="},null]}