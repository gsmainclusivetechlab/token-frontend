{"remainingRequest":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/src/components/layout/Footer.vue?vue&type=template&id=3d302860&","dependencies":[{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/src/components/layout/Footer.vue","mtime":1637588837162},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/eudis/Dev/GSMA/b4ll/b4ll-frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}